@inject IDialogService DialogService
@inject ISnackbar Snackbar

<DashboardItem Title="Sender Inspector" Description="This component helps you inspect the sender">
    <ComponentBody>
        <MudText>The email was sent by:</MudText>

        <MudPaper Elevation="0" Class="d-flex justify-center my-4">
            @if (domainReputation > 0)
            {
                <MudBadge Content="@domainReputation" Color="Color.Error">
                    <MudText Class="my-2" Color="@(_isVerified ? Color.Default : Color.Error)"
                         Align="Align.Center" Typo="Typo.h6">
                        @_sender
                    </MudText>
                </MudBadge>
            }
            else if (domainReputation == 0)
            {
                <MudBadge Content="@domainReputation" Color="Color.Info">
                    <MudText Class="my-2" Color="@(_isVerified ? Color.Default : Color.Error)"
                         Align="Align.Center" Typo="Typo.h6">
                        @_sender
                    </MudText>
                </MudBadge>
            }
            else
            {
                <MudBadge Icon="@Icons.Material.Filled.Warning" Color="Color.Warning">
                    <MudText Class="my-2" Color="@(_isVerified ? Color.Default : Color.Error)"
                         Align="Align.Center" Typo="Typo.h6">
                        @_sender
                    </MudText>
                </MudBadge>
            }
        </MudPaper>
        <MudTextField Variant="Variant.Outlined" Immediate TextChanged="@verify" @bind-Value="_typedValue"
                        Label="Type the email address you see above"></MudTextField>
        <div class="my-2 pa-2">
            @if (!_isVerified && _typedValue != "")
            {
                <MudText Color="Color.Error">
                    Currently the actual email address and the email address you typed do NOT match.
                    Attackers often will use misleading email addresses with similar characters to trick people.
                </MudText>
            }
            else if (_isVerified)
            {
                <MudText Color="Color.Info">
                    The email addresses match. However this does not necessarily mean the email is legitimate.
                    Continue looking at the other phishing indicators.
                </MudText>
            }
        </div>

        <MudTooltip>
            <ChildContent>
                <MudButton Disabled="@( !_isVerified)" Color="Color.Info" Variant="Variant.Filled" OnClick="submitVerify">Verify</MudButton>
            </ChildContent>
            <TooltipContent>
                <MudText>Upon verifying this email address, its domain will be sent to VirusTotal to be scanned.</MudText>
            </TooltipContent>
        </MudTooltip>
    </ComponentBody>
    <ComponentHelp>
        <SenderInspectorHelp/>
    </ComponentHelp>
</DashboardItem>

@code {
    [Parameter] public EmailAnalyser emailAnalyser { get; set; }

    [Inject] IVirusTotalService vtService { get; set; }
    [Inject] IWarningService warningService { get; set; }

    private string _sender = "";

    private string _typedValue = "";

    //initialise to default value
    private int domainReputation = -3;

    protected async override Task OnParametersSetAsync()
    {
        _sender = emailAnalyser.GetSender();
    }

    private async Task submitVerify()
    {
        string domain = _sender.Substring(_sender.IndexOf("@")+1);
        Console.WriteLine(domain);
        domainReputation = await vtService.CheckReputation(domain);
        if (domainReputation > 0)
        {
            Snackbar.Add("VirusTotal flagged this email as suspicious.", Severity.Error);
            warningService.AddWarning("Sender flagged as suspicious: " + _sender);
        }
        StateHasChanged();
    }

    private bool _isVerified = false;
    private async Task verify()
    {
        if(_typedValue == _sender)
        {
            _isVerified = true;
        }
        else{
            _isVerified = false;
        }

    }
}
